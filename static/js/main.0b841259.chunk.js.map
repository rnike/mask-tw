{"version":3,"sources":["store.js","comps/Marker.jsx","comps/Map.jsx","actions.js","comps/Current.jsx","comps/droupdown/DropDownItem.jsx","comps/droupdown/DropDownBox.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","sort","ACTION","createStore","state","type","payload","REFETCH","UPDATE","applyMiddleware","thunk","connect","map","item","center","properties","mask_adult","mask_child","name","dispatch","useDispatch","Marker","onClick","flyTo","geometry","coordinates","open","selected","position","icon","divIcon","html","className","iconSize","createClusterCustomIcon","cluster","mark","getAllChildMarkers","child","adult","forEach","x","options","L","length","point","props","data","useState","markList","setMarkList","useEffect","a","fetch","resp","List","json","features","list","key","id","Map","onclick","undefined","whenReady","target","onViewportChanged","now","zoom","style","height","width","zoomControl","maxZoom","TileLayer","attribution","url","ZoomControl","iconCreateFunction","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","local","coords","latitude","longitude","viewBox","fill","xmlns","filter","cx","cy","r","d","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","values","dx","dy","stdDeviation","mode","in2","phone","address","overflow","e","preventDefault","window","provider","OpenStreetMapProvider","setlist","search","query","searchText","value","results","fitBounds","bounds","getBounds","_southWest","_northEast","newlist","lat","lng","sortBy","reverse","slice","setTimeout","forceCheck","onSubmit","clipPath","placeholder","rx","transform","App","Boolean","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b841259.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nconst initialState = { sort: 0 };\r\nexport const ACTION = {\r\n  REFETCH: 'REFETCH',\r\n  UPDATE: 'UPDATE'\r\n};\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  const { REFETCH, UPDATE } = ACTION;\r\n  switch (type) {\r\n    case REFETCH:\r\n      return { ...state, ...payload };\r\n    case UPDATE:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default createStore(reducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport { Marker } from 'react-leaflet';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { divIcon } from 'leaflet';\r\nimport './Marker.scss';\r\nimport { ACTION } from '../store';\r\nconst MyMarker = ({\r\n  map,\r\n  item,\r\n  center,\r\n  properties: { mask_adult, mask_child, name }\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Marker\r\n      onClick={() => {\r\n        map.flyTo(\r\n          [item.geometry.coordinates[1], item.geometry.coordinates[0]],\r\n          18\r\n        );\r\n        dispatch({\r\n          type: ACTION.UPDATE,\r\n          payload: { open: false, selected: item }\r\n        });\r\n      }}\r\n      position={center}\r\n      icon={divIcon({\r\n        html: `<div class=\"board\">\r\n        <div class=\"row head\"> \r\n          <div class=\"text\">${name}</div>      \r\n        </div>\r\n        <div class=\"row body\"> \r\n          <div class=\"row\">\r\n          <div class=\"block ${mask_adult > 100 ? 'green' : 'red'}\"></div>\r\n            <div class=\"text\">成人</div>\r\n            <div class=\"count\">${mask_adult}</div> \r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"block ${mask_adult > 100 ? 'green' : 'red'}\"></div>\r\n            <div class=\"text\">兒童</div>\r\n            <div class=\"count\">${mask_child}</div> \r\n          </div>    \r\n        </div>\r\n        </div>`,\r\n        className: 'marker',\r\n        iconSize: [100, 80],\r\n        mask_adult,\r\n        mask_child\r\n      })}\r\n    ></Marker>\r\n  );\r\n};\r\nconst mapToProps = ({map}) => ({map});\r\nexport default connect(mapToProps)(MyMarker);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet';\r\nimport Mark from './Marker';\r\nimport { Refetch } from '../actions';\r\nimport L from 'leaflet';\r\nimport 'react-leaflet-markercluster/dist/styles.min.css';\r\nimport './Map.scss';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport { ACTION } from '../store';\r\n\r\nconst createClusterCustomIcon = function(cluster) {\r\n  const mark = cluster.getAllChildMarkers();\r\n  var child = 0;\r\n  var adult = 0;\r\n  mark.forEach(x => {\r\n    child += x.options.icon.options.mask_child;\r\n    adult += x.options.icon.options.mask_adult;\r\n  });\r\n  return L.divIcon({\r\n    html: `<div class=\"bord\">\r\n    <div class=\"row head\">\r\n    <svg class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\">\r\n    <path fill=\"#636366\" d=\"M4.571 7.625v-1.25C4.571 6.168 4.763 6 5 6h1.429c.236 0 .428.168.428.375v1.25c0 .207-.192.375-.428.375H5c-.237 0-.429-.168-.429-.375zm5 .375H11c.237 0 .429-.168.429-.375v-1.25c0-.207-.192-.375-.429-.375H9.571c-.236 0-.428.168-.428.375v1.25c0 .207.192.375.428.375zm-2.714 2.625v-1.25c0-.207-.192-.375-.428-.375H5c-.237 0-.429.168-.429.375v1.25c0 .207.192.375.429.375h1.429c.236 0 .428-.168.428-.375zM9.571 11H11c.237 0 .429-.168.429-.375v-1.25c0-.207-.192-.375-.429-.375H9.571c-.236 0-.428.168-.428.375v1.25c0 .207.192.375.428.375zM16 14.875V16H0v-1.125c0-.207.192-.375.429-.375h.696V2.657c0-.363.384-.657.857-.657h3.16V.75C5.143.336 5.528 0 6 0h4c.473 0 .857.336.857.75V2h3.16c.474 0 .858.294.858.657V14.5h.696c.237 0 .429.168.429.375zm-13.16-.406h4.017v-2.094c0-.207.192-.375.429-.375h1.428c.237 0 .429.168.429.375v2.094h4.018V3.5h-2.304v.75c0 .414-.384.75-.857.75H6c-.473 0-.857-.336-.857-.75V3.5H2.839v10.969zM9.5 2h-.929v-.813a.176.176 0 0 0-.062-.132A.23.23 0 0 0 8.357 1h-.714a.23.23 0 0 0-.152.055.176.176 0 0 0-.062.133V2H6.5a.23.23 0 0 0-.152.055.176.176 0 0 0-.062.132v.626c0 .05.022.097.062.132A.23.23 0 0 0 6.5 3h.929v.813c0 .05.022.097.062.132A.23.23 0 0 0 7.643 4h.714a.23.23 0 0 0 .152-.055.176.176 0 0 0 .062-.132V3H9.5a.23.23 0 0 0 .152-.055.176.176 0 0 0 .062-.132v-.626a.176.176 0 0 0-.062-.132A.23.23 0 0 0 9.5 2z\"/>\r\n    </svg>\r\n    <div class=\"text\">販售處</div>    \r\n    <div class=\"count\">${mark.length}</div>    \r\n    </div>\r\n    <div class=\"row ${adult > 100 ? 'green' : 'red'}\">\r\n    <div class=\"text2\">成人</div>\r\n    <div class=\"count2\">${adult}</div> \r\n  </div>\r\n    <div class=\"row bot ${child > 100 ? 'green' : 'red'}\">\r\n      <div class=\"text2\">兒童</div>\r\n      <div class=\"count2\">${child}</div> \r\n    </div>\r\n    </div>`,\r\n    className: 'marker-group',\r\n    iconSize: L.point(100, 80, true)\r\n  });\r\n};\r\nconst MyMap = ({ data }) => {\r\n  const [markList, setMarkList] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(Refetch());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (data) {\r\n      const list = data.map(({ properties, geometry }) => (\r\n        <Mark\r\n          key={`k${properties.id}`}\r\n          item={{ properties, geometry }}\r\n          center={[geometry.coordinates[1], geometry.coordinates[0]]}\r\n          properties={properties}\r\n        />\r\n      ));\r\n      setMarkList(list);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <Map\r\n      onclick={() => {\r\n        dispatch({\r\n          type: ACTION.UPDATE,\r\n          payload: { selected: undefined }\r\n        });\r\n      }}\r\n      whenReady={x => {\r\n        dispatch({\r\n          type: ACTION.UPDATE,\r\n          payload: { map: x.target }\r\n        });\r\n      }}\r\n      onViewportChanged={x => {\r\n        dispatch({\r\n          type: ACTION.UPDATE,\r\n          payload: { now: { center: x.center, zoom: x.zoom } }\r\n        });\r\n      }}\r\n      style={{ position: 'fixed', height: '100vh', width: '100vw' }}\r\n      center={[23.4202069, 120.8489535]}\r\n      zoomControl={false}\r\n      maxZoom={18}\r\n      zoom={8}\r\n    >\r\n      <TileLayer\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n      />\r\n      <ZoomControl position='topright' />\r\n      <MarkerClusterGroup iconCreateFunction={createClusterCustomIcon}>\r\n        {markList}\r\n      </MarkerClusterGroup>\r\n    </Map>\r\n  );\r\n};\r\n\r\nconst mapToProps = props => props;\r\nexport default connect(mapToProps)(MyMap);\r\n","import { ACTION } from './store';\r\nimport { List } from 'immutable';\r\nconst DataUrl = 'https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json';\r\n// const csvurl =\r\n//   'https://data.nhi.gov.tw/resource/mask/maskdata.csv';\r\nexport const Refetch = () => async dispatch => {\r\n  var resp = await fetch(DataUrl);\r\n  var payload = { data: List((await resp.json()).features) };\r\n  dispatch({ type: ACTION.REFETCH, payload });\r\n}; ","import React, { useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { geolocated } from 'react-geolocated';\r\nimport { ACTION } from '../store';\r\nimport './Current.scss';\r\nconst Current = ({ map, local, coords }) => {\r\n  const dispatch = useDispatch(); \r\n  useEffect(() => {\r\n    if (coords) {\r\n      const { latitude, longitude } = coords;\r\n      dispatch({\r\n        type: ACTION.UPDATE,\r\n        payload: { local: [latitude, longitude] }\r\n      });\r\n    }\r\n  }, [coords, dispatch]);\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        if (map && local) {\r\n          map.flyTo(local, 12);\r\n        }\r\n      }}\r\n      className={`current ${coords?'':'disabled'}`}\r\n    ><svg   viewBox=\"0 0 51 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g filter=\"url(#filter0_d)\">\r\n    <circle cx=\"23.4336\" cy=\"23\" r=\"20\" fill=\"white\"/>\r\n    </g>\r\n    <path d=\"M23.6434 7.99944C15.2078 7.8855 8.32105 14.7722 8.43499 23.2079C8.54748 31.2981 15.1349 37.8856 23.2252 37.9981C31.6623 38.1134 38.5475 31.2267 38.4322 22.7911C38.3211 14.6994 31.7337 8.11194 23.6434 7.99944ZM30.2849 17.175L24.3544 30.6253C24.009 31.3803 22.856 31.1301 22.856 30.2965V23.8641C22.856 23.7876 22.8256 23.7142 22.7715 23.6601C22.7174 23.606 22.644 23.5756 22.5675 23.5756H16.1366C15.3058 23.5756 15.0549 22.4312 15.807 22.0851L29.2581 16.1481C29.4018 16.0817 29.5624 16.061 29.7182 16.0888C29.8741 16.1166 30.0177 16.1915 30.1296 16.3034C30.2415 16.4154 30.3164 16.559 30.3442 16.7148C30.372 16.8706 30.3513 17.0313 30.2849 17.175V17.175Z\" fill=\"#636366\"/>\r\n    <defs>\r\n    <filter id=\"filter0_d\" x=\"0.433594\" y=\"0\" width=\"50\" height=\"50\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n    <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\r\n    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"/>\r\n    <feOffset dx=\"2\" dy=\"2\"/>\r\n    <feGaussianBlur stdDeviation=\"2.5\"/>\r\n    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"/>\r\n    <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\r\n    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\r\n    </filter>\r\n    </defs>\r\n    </svg></div>\r\n  );\r\n};\r\n\r\nconst mapToProps = props => props;\r\nexport default connect(mapToProps)(\r\n  geolocated({\r\n    positionOptions: {\r\n      enableHighAccuracy: true\r\n    },\r\n    userDecisionTimeout: 5000\r\n  })(Current)\r\n);\r\n","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport './DropDownItem.scss';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { ACTION } from '../../store';\r\nconst DropDownItem = ({\r\n  map,\r\n  item,\r\n  item: {\r\n    properties: { name, mask_adult, mask_child, phone, address },\r\n    geometry: { coordinates }\r\n  }\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <LazyLoad overflow>\r\n      <div\r\n        className='DropDownItem'\r\n        onClick={e => {\r\n          if (e.target.className !== 'button') {\r\n            map.flyTo([coordinates[1], coordinates[0]], 18);\r\n\r\n            dispatch({\r\n              type: ACTION.UPDATE,\r\n              payload: { open: false, selected: item }\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <div className='grid-left'>\r\n          <div className='name'>{name}</div>\r\n          <div className='left'>\r\n            <div\r\n              className={`block ${mask_adult > 100 ? 'green' : 'red'}`}\r\n            ></div>\r\n            <div className='text'>{`成人 ${mask_adult}`}</div>\r\n            <div\r\n              className={`block ${mask_child > 100 ? 'green' : 'red'}`}\r\n            ></div>\r\n            <div className='text'>{`兒童 ${mask_child}`}</div>\r\n          </div>\r\n          <div className='text'>{`住址 ${address}`}</div>\r\n          <div className='text'>{`電話 ${phone}`}</div>\r\n        </div>\r\n        <div className='grid-right'> \r\n          <div\r\n            className='button'\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              window.open(\r\n                `https://www.google.com/search?q=${name}+${address}`,\r\n                '_blank',\r\n                'noopener'\r\n              );\r\n            }}\r\n          >\r\n            <svg \r\n              viewBox='0 0 56 66'\r\n              fill='none'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <path\r\n                d='M23.792 55.5903H21.344V56.7663H22.568V57.5103H21.392V58.6623H22.568V59.4183H21.344V60.6063H23.792V55.5903ZM19.364 59.4063H18.224V58.6623H19.304V57.5103H18.224V56.5983C18.668 56.4543 19.172 56.2743 19.652 56.0823L18.788 55.0503C18.332 55.3503 17.528 55.7823 16.988 55.9743V60.5823H19.364V59.4063ZM16.808 61.0383L16.568 59.7783L15.776 60.0423V58.3263H16.616V57.0063H15.776V54.7623H14.468V57.0063H13.304V58.3263H14.468V60.4743C13.964 60.6303 13.52 60.7623 13.136 60.8703L13.472 62.2263L14.468 61.8783V64.3023C14.468 64.4583 14.42 64.4943 14.276 64.4943C14.132 64.5063 13.736 64.5063 13.304 64.4823C13.484 64.8783 13.64 65.4543 13.676 65.8143C14.42 65.8143 14.948 65.7663 15.296 65.5383C15.668 65.3223 15.776 64.9623 15.776 64.3023V61.4223L16.808 61.0383ZM21.704 62.3703C21.344 62.7903 20.912 63.1263 20.408 63.4263C19.892 63.1263 19.448 62.7783 19.124 62.3703H21.704ZM22.832 61.1343L22.592 61.1823H21.008V54.7623H19.664V61.1823H16.856V62.3703H18.212L17.696 62.5503C18.08 63.1143 18.548 63.6183 19.076 64.0503C18.212 64.3623 17.228 64.5783 16.172 64.6983C16.4 65.0223 16.688 65.5983 16.796 65.9583C18.116 65.7423 19.328 65.4183 20.384 64.9143C21.32 65.3943 22.4 65.7423 23.624 65.9463C23.816 65.5623 24.2 64.9863 24.5 64.6863C23.504 64.5663 22.592 64.3503 21.788 64.0623C22.628 63.4143 23.288 62.5863 23.732 61.5303L22.832 61.1343ZM35.744 57.8103H29.06V58.7463H37.148V57.3543H38.108V56.4903H37.148V55.1223H29.108V56.0583H35.744V56.4903H28.244V57.3543H35.744V57.8103ZM28.052 62.0823C29.348 61.9983 31.148 61.9023 32.876 61.7943L32.888 60.7863L31.052 60.8703V60.1263H32.72V59.1423H28.148V60.1263H29.708V60.9303C29.06 60.9663 28.46 60.9903 27.956 61.0023L28.052 62.0823ZM34.64 60.0543H36.656V60.8823H34.64V60.0543ZM38.672 62.3463H36.308V61.7943H38.072V59.1423H33.32V61.7943H34.892V62.3463H27.752V63.5223H30.2L29.768 63.8823C30.368 64.2903 31.088 64.9023 31.4 65.3343L32.432 64.4583C32.192 64.1703 31.796 63.8343 31.376 63.5223H34.892V64.5063C34.892 64.6623 34.832 64.6863 34.652 64.6983C34.46 64.7103 33.788 64.7103 33.188 64.6863C33.368 65.0343 33.584 65.5623 33.644 65.9463C34.556 65.9463 35.204 65.9343 35.672 65.7423C36.176 65.5503 36.308 65.2143 36.308 64.5423V63.5223H38.672V62.3463Z'\r\n                fill='#636366'\r\n              />\r\n              <g filter='url(#filter0_d)'>\r\n                <circle cx='26' cy='26.0977' r='18' fill='white' />\r\n              </g>\r\n              <path\r\n                d='M34.1706 24.4649H33.4993V24.4303H25.9993V27.7637H30.7089C30.0219 29.7041 28.1756 31.097 25.9993 31.097C23.2381 31.097 20.9993 28.8583 20.9993 26.097C20.9993 23.3358 23.2381 21.097 25.9993 21.097C27.2739 21.097 28.4335 21.5778 29.3164 22.3633L31.6735 20.0062C30.1852 18.6191 28.1943 17.7637 25.9993 17.7637C21.3973 17.7637 17.666 21.4949 17.666 26.097C17.666 30.6991 21.3973 34.4303 25.9993 34.4303C30.6014 34.4303 34.3327 30.6991 34.3327 26.097C34.3327 25.5383 34.2752 24.9928 34.1706 24.4649Z'\r\n                fill='#FFC107'\r\n              />\r\n              <path\r\n                d='M18.627 22.2183L21.3649 24.2262C22.1057 22.392 23.8999 21.097 25.9995 21.097C27.274 21.097 28.4336 21.5778 29.3165 22.3633L31.6736 20.0062C30.1853 18.6191 28.1945 17.7637 25.9995 17.7637C22.7986 17.7637 20.0228 19.5708 18.627 22.2183Z'\r\n                fill='#FF3D00'\r\n              />\r\n              <path\r\n                d='M26.0008 34.4313C28.1533 34.4313 30.1091 33.6075 31.5879 32.2679L29.0087 30.0854C28.1439 30.7431 27.0872 31.0988 26.0008 31.0979C23.8333 31.0979 21.9929 29.7159 21.2995 27.7871L18.582 29.8809C19.9612 32.5796 22.762 34.4313 26.0008 34.4313Z'\r\n                fill='#4CAF50'\r\n              />\r\n              <path\r\n                d='M34.1713 24.4662H33.5V24.4316H26V27.765H30.7096C30.3809 28.6885 29.7889 29.4955 29.0067 30.0862L29.0079 30.0854L31.5871 32.2679C31.4046 32.4337 34.3333 30.265 34.3333 26.0983C34.3333 25.5396 34.2758 24.9941 34.1713 24.4662Z'\r\n                fill='#1976D2'\r\n              />\r\n              <defs>\r\n                <filter\r\n                  id='filter0_d'\r\n                  x='0'\r\n                  y='0.0976562'\r\n                  width='56'\r\n                  height='56'\r\n                  filterUnits='userSpaceOnUse'\r\n                  colorInterpolationFilters='sRGB'\r\n                >\r\n                  <feFlood floodOpacity='0' result='BackgroundImageFix' />\r\n                  <feColorMatrix\r\n                    in='SourceAlpha'\r\n                    type='matrix'\r\n                    values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'\r\n                  />\r\n                  <feOffset dx='2' dy='2' />\r\n                  <feGaussianBlur stdDeviation='5' />\r\n                  <feColorMatrix\r\n                    type='matrix'\r\n                    values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0'\r\n                  />\r\n                  <feBlend\r\n                    mode='normal'\r\n                    in2='BackgroundImageFix'\r\n                    result='effect1_dropShadow'\r\n                  />\r\n                  <feBlend\r\n                    mode='normal'\r\n                    in='SourceGraphic'\r\n                    in2='effect1_dropShadow'\r\n                    result='shape'\r\n                  />\r\n                </filter>\r\n              </defs>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </LazyLoad>\r\n  );\r\n};\r\n\r\nconst mapToProps = ({ map }) => ({ map });\r\nexport default connect(mapToProps)(DropDownItem);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport './DropDownBox.scss';\r\nimport DropDownItem from './DropDownItem';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport { ACTION } from '../../store';\r\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\r\nconst provider = new OpenStreetMapProvider();\r\nconst DropDownBox = ({ data, map, now, open, selected, sort }) => {\r\n  const [list, setlist] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (map && data) {\r\n      const { _southWest, _northEast } = map.getBounds();\r\n      const newlist = data.filter(\r\n        ({ geometry: { coordinates } }) =>\r\n          coordinates[1] > _southWest.lat &&\r\n          coordinates[1] < _northEast.lat &&\r\n          coordinates[0] > _southWest.lng &&\r\n          coordinates[0] < _northEast.lng\r\n      );\r\n      setlist(\r\n        newlist\r\n          .sortBy(x =>\r\n            sort === 0\r\n              ? x.properties.mask_adult + x.properties.mask_child\r\n              : sort === 1\r\n              ? x.properties.mask_adult\r\n              : x.properties.mask_child\r\n          )\r\n          .reverse()\r\n          .slice(0, 20)\r\n      );\r\n    }\r\n    return () => {};\r\n  }, [now, sort, map, data]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => forceCheck(), 500);\r\n  }, [open, selected]);\r\n  async function search(e) {\r\n    e.preventDefault();\r\n    const results = await provider.search({\r\n      query: e.target.searchText.value\r\n    });\r\n    if (results.length > 0) map.fitBounds(results[0].bounds);\r\n  }\r\n  return (\r\n    <div\r\n      className={`DropDownBox ${selected ? 'selected' : ''} ${\r\n        open ? 'open' : 'close'\r\n      } `}\r\n    >\r\n      <div className='search'>\r\n        <form onSubmit={search}>\r\n          <svg\r\n            className='face'\r\n            width='16'\r\n            height='15'\r\n            viewBox='0 0 16 15'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <g clipPath='url(#clip0)'>\r\n              <path\r\n                d='M15.75 7.5C15.75 11.6421 12.3921 15 8.25 15C4.10833 15 0.75 11.6421 0.75 7.5C0.75 3.35833 4.10833 0 8.25 0C12.3921 0 15.75 3.35833 15.75 7.5Z'\r\n                fill='#FFCC4D'\r\n              />\r\n              <path\r\n                d='M3.66718 6.25065C3.57771 6.25076 3.49058 6.22207 3.41869 6.16882C3.34679 6.11558 3.29394 6.0406 3.26796 5.95499C3.24198 5.86938 3.24424 5.77768 3.27441 5.69345C3.30459 5.60923 3.36107 5.53695 3.43551 5.48732C3.49093 5.45065 4.81093 4.58398 6.58343 4.58398C6.69393 4.58398 6.79991 4.62788 6.87805 4.70602C6.95619 4.78416 7.00009 4.89014 7.00009 5.00065C7.00009 5.11116 6.95619 5.21714 6.87805 5.29528C6.79991 5.37342 6.69393 5.41732 6.58343 5.41732C5.06051 5.41732 3.90926 6.17315 3.89801 6.18065C3.82969 6.22632 3.74936 6.25069 3.66718 6.25065ZM12.833 6.25065C12.7512 6.25065 12.6711 6.22644 12.603 6.18107C12.5913 6.17357 11.4284 5.41732 9.91676 5.41732C9.80625 5.41732 9.70027 5.37342 9.62213 5.29528C9.54399 5.21714 9.50009 5.11116 9.50009 5.00065C9.50009 4.89014 9.54399 4.78416 9.62213 4.70602C9.70027 4.62788 9.80625 4.58398 9.91676 4.58398C11.6893 4.58398 13.0093 5.45065 13.0647 5.48732C13.1391 5.53695 13.1956 5.60923 13.2258 5.69345C13.2559 5.77768 13.2582 5.86938 13.2322 5.95499C13.2062 6.0406 13.1534 6.11558 13.0815 6.16882C13.0096 6.22207 12.9225 6.25076 12.833 6.25065Z'\r\n                fill='#664500'\r\n              />\r\n              <path\r\n                d='M12 9.20458L15.75 7.5C15.75 7.225 15.7329 6.95458 15.7046 6.6875L12 8.37125V7.91667C12 7.69565 11.9122 7.48369 11.7559 7.32741C11.5996 7.17113 11.3877 7.08333 11.1667 7.08333H5.33333C5.11232 7.08333 4.90036 7.17113 4.74408 7.32741C4.5878 7.48369 4.5 7.69565 4.5 7.91667V8.37125L0.795833 6.6875C0.767083 6.95458 0.75 7.225 0.75 7.5L4.5 9.20458V11.0987L1.39458 10.5342C1.53667 10.855 1.70333 11.1621 1.8875 11.4571L4.5 11.9321V12.5C4.5 12.721 4.5878 12.933 4.74408 13.0893C4.90036 13.2455 5.11232 13.3333 5.33333 13.3333H11.1667C11.3877 13.3333 11.5996 13.2455 11.7559 13.0893C11.9122 12.933 12 12.721 12 12.5V11.9321L14.6129 11.4567C14.7967 11.1617 14.9633 10.8546 15.1054 10.5338L12 11.0987V9.20458Z'\r\n                fill='#F5F8FA'\r\n              />\r\n            </g>\r\n            <defs>\r\n              <clipPath id='clip0'>\r\n                <rect x='0.75' width='15' height='15' fill='white' />\r\n              </clipPath>\r\n            </defs>\r\n          </svg>\r\n          <input\r\n            type='text'\r\n            name='searchText'\r\n            placeholder='請輸入地區名稱或地址'\r\n          />\r\n        </form>\r\n        <div\r\n          className={`toggle ${open ? 'open' : ''}`}\r\n          onClick={() => {\r\n            dispatch({\r\n              type: ACTION.UPDATE,\r\n              payload: { open: !open }\r\n            });\r\n          }}\r\n        >\r\n          <svg\r\n            width='22'\r\n            height='23'\r\n            viewBox='0 0 22 23'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <rect\r\n              x='4.40039'\r\n              y='18.0996'\r\n              width='13.2'\r\n              height='2.2'\r\n              fill='#636366'\r\n            />\r\n            <rect\r\n              x='12.4668'\r\n              y='7.83398'\r\n              width='8.8'\r\n              height='2.93333'\r\n              rx='1'\r\n              transform='rotate(90 12.4668 7.83398)'\r\n              fill='#636366'\r\n            />\r\n            <path\r\n              d='M10.1813 4.60392C10.5794 4.03521 11.4217 4.03521 11.8198 4.60393L15.0324 9.19347C15.4964 9.85624 15.0222 10.7669 14.2132 10.7669H7.78784C6.97882 10.7669 6.50467 9.85624 6.96861 9.19346L10.1813 4.60392Z'\r\n              fill='#636366'\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      {selected && <DropDownItem key={`selectedItem`} item={selected} />}\r\n      <div\r\n        className='spacer'\r\n        onClick={() => {\r\n          dispatch({\r\n            type: ACTION.UPDATE,\r\n            payload: { sort: sort === 2 ? 0 : sort + 1 }\r\n          });\r\n        }}\r\n      >\r\n        <div>{`範圍內前20間銷售處 , 排序: ${\r\n          sort === 0 ? '成人+兒童' : sort === 1 ? '成人' : '兒童'\r\n        }`}</div>\r\n      </div>\r\n      <div className='list'>\r\n        {list.map(x => (\r\n          <DropDownItem key={`li${x.properties.id}`} item={x} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapToProps = props => props;\r\nexport default connect(mapToProps)(DropDownBox);\r\n","import React from 'react';\nimport Map from './comps/Map';\nimport Current from './comps/Current';\nimport DropDownBox from './comps/droupdown/DropDownBox';\n\nfunction App() {\n  return <div>\n    <Map/>\n    <Current/>\n    <DropDownBox/>\n  </div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}